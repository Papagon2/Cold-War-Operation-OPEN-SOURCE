# DCS‑Mission: Cold‑War Breach — README & Mission Maker Checklist

This README is the one‑stop reference for setting up, troubleshooting, and extending the mission scripts you now have:

* **CONFIG.lua**
* **UNITS.lua**, **WEAPONS.lua**, **PYLONS.lua**, **LOADOUT.lua**
* **STATE.lua**, **TERRAIN.lua** (your existing or in‑progress ones)
* **MARK.lua**, **AIR.lua**, **GROUND.lua**, **TRANSPORT.lua**, **FERRY.lua**, **NAVAL.lua**
* **PICKUP.lua**, **SIDEMISSIONS.lua**, **RESTRICT.lua**
* **OPERATIONINIT.lua**

---

## 1) Mission Editor Load Order

Place these with **DO SCRIPT FILE** in the exact sequence:

1. `CONFIG.lua`
2. `UNITS.lua`
3. `PYLONS.lua`
4. `WEAPONS.lua`
5. `LOADOUT.lua`
6. `TERRAIN.lua`
7. `STATE.lua`
8. `RESTRICT.lua`
9. `MARK.lua`
10. `FERRY.lua`
11. `TRANSPORT.lua`
12. `GROUND.lua`
13. `AIR.lua`
14. `NAVAL.lua`
15. `PICKUP.lua`
16. `SIDEMISSIONS.lua`
17. `OPERATIONINIT.lua`

> Tip: keep each file name unique; avoid spaces.

---

## 2) Zone & Naming Conventions (copy/paste templates)

All systems rely on consistent zone/group naming. Use these templates.

### 2.1 Airfields & Assault Zones

* **Airfield ownership/state** is defined in `CONFIG.AIRFIELDS`.
* For player troop drops to auto‑assault: create a trigger zone named `Z_<AirfieldName>`.

**Example:**

```
Z_Bodo
Z_Kiruna
Z_Alta
```

### 2.2 Ground War Routes

**Spawn points** and **attack/deploy** zones per role; and a chain of waypoints:

```
<ROLE>_<FROM>_Spawn            # e.g. AAA_Bodo_Spawn, TANK_Evenes_Spawn, ARTILLERY_Kiruna_Spawn
WP_<FROM>_to_<TO>_1..N         # e.g. WP_Bodo_to_Kiruna_1, WP_Bodo_to_Kiruna_2, ...
AAA_<TO>_DEPLOY                # AAA converts trucks→site here
<ROLE>_<TO>_ATTACK             # TANK/ARTILLERY final action point
```

Add the route in code (or edit OPERATIONINIT):

```lua
ground.addRoute("Bodo", "Kiruna")
ground.addRoute("Evenes", "Alta")
```

### 2.3 Ferry Links (A⇄B)

For instant “bridge” teleports of ground groups. Either define explicit pairs in `CONFIG.FERRY.PAIRS`, **or** place paired zones for each tag in `CONFIG.FERRY.CHAINS`.

```
FERRY_<Tag>_A
FERRY_<Tag>_B
```

**Example:**

```
FERRY_Bodo_A    FERRY_Bodo_B
FERRY_Evenes_A  FERRY_Evenes_B
```

### 2.4 Naval Patrols

For each named **route** you use in `CONFIG.NAVAL.STARTUP`:

```
NAVAL_<ROUTE>_SPAWN
NAVAL_<ROUTE>_WP_1
NAVAL_<ROUTE>_WP_2
...
```

### 2.5 CAP/CAS/Hotspot Zones (Side Missions)

```
Z_CAP_1, Z_CAP_2, Z_CAP_3
Z_HOTSPOT_1, Z_HOTSPOT_2     # excluded from CAP tasking
Z_CAS_1, Z_CAS_2, Z_CAS_3
```

---

## 3) Economy Rules (quick reference)

* **Caps:** `CONFIG.ECONOMY.CAPS` (default: 3000 MP / 10000 Ammo / 100000 Fuel).
* **Income:** Hub vs Minor tick sizes every `TICK_SECONDS`.
* **Spawn gating:** Spawns at an airfield **fail** if it can’t pay the cost.
* **Costs:**

  * **GROUND** (if not explicitly priced in `UNITS.COST`):

    * Fuel: +100 if the unit has an engine; Infantry 0
    * Ammo: \~½ of default load where known
    * Manpower: crew 1→10, 2→15, 3+→20
  * **AIR**: from **LOADOUT** preset → `WEAPONS.computeAmmoFromPreset` (rocket pods count **½** contents), fuel from preset; MP from crew.
  * **TRANSPORT** (AI): credits based on survivors × per‑vehicle values in `CONFIG.TRANSPORT`.
  * **PLAYER TRANSPORT** (Side Mission): delivers `CONFIG.SIDEMISSIONS.PLAYER_DELIVER` on landing at destination.

---

## 4) System Behavior Cheatsheet

### 4.1 AIR.lua

* Per‑airfield cap, patrol timeout & respawn.
* 1× **AWACS** + 1× **TANKER** per frontline side (not counted against cap).
* Hot/Cold starts governed by `CONFIG.AIR.SPAWN.PARKING_STATE`.
* Economy debit: MP (crew), Ammo (loadout), Fuel (preset fuel × factor).

### 4.2 GROUND.lua

* Route cap (default **5 groups**), spawn pacing (**20 min**), order: **AAA → TANK → ARTILLERY**.
* **AAA** trucks morph into a site at `AAA_<TO>_DEPLOY`.
* **ARTILLERY** holds fire until final attack zone; then `FireAtPoint`.
* > 70% loss → burn & despawn.
* **AAA** low‑ammo → requests **TRANSPORT** ammo truck.

### 4.3 TRANSPORT.lua

* Donor AF must be ≥ **50%** full on all resources.
* Auto‑chooses **TRUCK** (short) or **HELO** (long).
* Trucks: success within **200 m** for **10 min**; loss ≥70% = fail.
* Helos: must **arrive/land**, then **RTB → shutdown → despawn**.
* Cooldowns: **30 min** retry on fail; **1 h** per‑destination on success.

### 4.4 FERRY.lua

* Teleports ground groups between paired `FERRY_*_A/B` after **presence time**; per‑group cooldown to prevent loops.

### 4.5 NAVAL.lua

* Spawns “startup fleets” on route spawn zones; loops route; ROE config.
* ≥70% loss → despawn; **2 h** respawn.

### 4.6 PICKUP.lua (Players)

* Load squads/vehicles **at friendly AFs**; unload anywhere.
* Inside `Z_<Airfield>` (enemy): auto‑assault that airfield.
* Capacity: UH‑1H/Mi‑24 = **2 squads**; CH‑47/Mi‑8 = **4 squads** or **2 squads + 1 vehicle**.
* Idle: start timer at **10 min**, despawn at **30 min** of inactivity.

### 4.7 SIDEMISSIONS.lua (Players)

* **CAS**/**CAP**/**INT**/**TRANSPORT** F10 menu.
* CAP excludes **HOTSPOT** zones and needs **20 min** on station.

### 4.8 RESTRICT.lua

* Clients only allowed to use **their coalition’s** aircraft/units.
* Modes: `DESPAWN` | `KILL` | `WARN`.

---

## 5) Quick Mission‑Maker Checklist ✅

* [ ] **CONFIG.lua** edited: Airfield owners/hubs; optional zone name overrides.
* [ ] Place **assault zones**: `Z_<Airfield>` for every airfield you want helo drops to trigger attacks.
* [ ] Build **ground routes** for each contested pair:

  * [ ] `<ROLE>_<FROM>_Spawn` (AAA/TANK/ARTILLERY)
  * [ ] `WP_<FROM>_to_<TO>_1..N`
  * [ ] `AAA_<TO>_DEPLOY` + `<ROLE>_<TO>_ATTACK`
  * [ ] Add `GROUND.addRoute("FROM","TO")` in **OPERATIONINIT.lua** (or elsewhere once).
* [ ] Place **ferry pairs**: `FERRY_*_A/B` according to your map.
* [ ] Set up **naval routes**: `NAVAL_<ROUTE>_SPAWN` + `NAVAL_<ROUTE>_WP_*`; reference in `CONFIG.NAVAL.STARTUP`.
* [ ] Place **CAP/CAS/HOTSPOT** zones.
* [ ] Verify **PYLONS** presets exist for aircraft you plan to spawn; map roles→presets in `CONFIG.AIR.LOADOUTS`.
* [ ] Confirm **RESTRICT** mode and allowed lists fit the mission design.
* [ ] Load all scripts in the **order** listed.

---

## 6) Quick Test Flow (10 minutes)

1. **Boot** the mission: watch dcs.log for `[OPERATIONINIT] All systems initialized.`
2. **Overlay**: economy marks appear on all airfields every 30 s.
3. **Ground**: after a couple of minutes, see first route spawns; AAA trucks convert at the destination.
4. **Air**: AWACS/TANKER appear at frontline; a few CAP/CAS/STRIKE/BOMB flights queue in.
5. **Transport**: request an airfield resupply via script or let AAA request a truck when engaged.
6. **Ferry**: drive a spawned ground group into a `FERRY_*_A` zone; confirm hop to `*_B`.
7. **Naval**: check fleet spawn and looping route.
8. **Pickup**: as a helo, load/drop and verify auto‑assault inside enemy `Z_*`.
9. **Side Missions**: open F10 → “Side Missions”; test CAP/CAS/INT/TRANSPORT.
10. **Restrict**: try to spawn in an enemy type → verify warn/despawn.

---

## 7) Troubleshooting

* **Nothing spawns:** Confirm script **load order** and that `TERRAIN.bootstrap()` & `STATE.bootstrap()` ran.
* **Ground stuck:** Missing `WP_<FROM>_to_<TO>_1` or wrong zone names; check dcs.log for GROUND warnings.
* **AAA didn’t convert:** Ensure `AAA_<TO>_DEPLOY` exists and is reachable.
* **AIR wrong loadout:** Verify `CONFIG.AIR.LOADOUTS[role]` preset exists in **PYLONS** for that type.
* **Markers missing:** `CONFIG.MARK.ENABLED` is true; check that **STATE** and **TERRAIN** are providing data.
* **Naval idle:** Missing `NAVAL_<ROUTE>_WP_1`.
* **Ferry loops forever:** Increase `CONFIG.FERRY.COOLDOWN_SECONDS`.

---

## 8) Extending

* Add aircraft types and presets in **PYLONS.lua**, then map roles in `CONFIG.AIR.LOADOUTS`.
* Add new ground unit types in **UNITS.lua** with `UNITS.COST` or metadata for auto‑pricing.
* Wire more patrols: extend `CONFIG.NAVAL.STARTUP`.
* Edit economy pacing via `CONFIG.ECONOMY` (tick sizes & stock caps).

---

### Version Notes

Keep a short change log at the top of **CONFIG.lua** or here. Example:

```
2025‑09‑19  v0.9  First integrated build: AIR/GROUND/NAVAL/TRANSPORT/FERRY/PICKUP/SIDEMISSIONS/RESTRICT.
```
